# shellcheck shell=sh disable=SC3043

___x_cmd_hub_file(){
    param:dsl<<A
subcommands:
    ls          "List files in hub"
    which       "Find file in hub"
    upload      "Update file to hub"
    share       "Set file to public"
    private     "Set file to private"
A
    param:run
    [ -z "${PARAM_SUBCMD}" ] && ___x_cmd_hub_file help && return
    "___x_cmd_hub_file_$PARAM_SUBCMD" "$@"
}

___x_cmd_hub_file_ls(){
    param:void
    local respath="${1:-@me/}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    local res
    if ! res="$(___x_cmd_hub_client_file_ls "$respath")" ; then
        hub:error "Failed to ls file: $res"
        return 1
    fi
    hub:debug "response: ${res}"

    local code
    code="$(xrc cat awk/lib/default.awk awk/lib/json.awk awk/lib/jiter.awk )"
    printf "%s" "$res" | awk "$code"'
        { jiget_after_tokenize_unquote($0, ".") }'
}

___x_cmd_hub_file_which(){
    param:dsl<<A
advise:
    #1    x hub file ls
option:
    #1    "Resourse path"
A
    param:run
    local respath="${1:?Provide respath}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    if ! res=$(___x_cmd_hub_client_file_cat "$respath"); then
        hub:error "Failed: $res. Please check the respath."
        return 1
    fi

    printf "%s\n" "$res"
}

# TODO: Should be review. @el
___x_cmd_hub_file_normalize_respath(){
    local respath="${1}"
    case "$respath" in
        @me/*|@i/*|@/*)
            ___X_CMD_WHICH_ONE_RESOURCE_TYPE=me@hub
            printf "%s" "$respath" ;;
        *@*)
            ___X_CMD_WHICH_ONE_RESOURCE_TYPE=hub
            printf "%s" "$respath" ;;
        *)
            ___X_CMD_WHICH_ONE_RESOURCE_TYPE=hub
            printf "%s" "@me/${respath#/}" ;;
    esac
}

___x_cmd_hub_file_upload(){
    param:dsl<<A
advise:
    #1    ___advise_ls
option:
    #1    "local  path"
    #2    "remote path"
A
    param:run

    local localfp="${1:?Provide local file}"
    local respath="${2:?provide respath}"

    [ ! -f "$localfp" ] && {
        hub:error "File Not Existed: $localfp"
        return
    }

    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"
    ___x_cmd_hub_client_file_upload "$localfp" "$respath"
}

___x_cmd_hub_file_share(){
    param:void
    local respath="${1:?Please provide path}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    if ! res="$(___x_cmd_hub_client_file_share "${respath}")" ; then
        hub:error "Failed to share file: $res"
        return 1
    fi

    hub:info "File shared successfully: $res"
}

___x_cmd_hub_file_private(){
    param:void
    local respath="${1:?Please provide path}"
    respath="$(___x_cmd_hub_file_normalize_respath "$respath")"

    if ! res="$(___x_cmd_hub_client_file_private "${respath}")" ; then
        hub:error "Failed to private file: $res"
        return 1
    fi

    hub:info "File private successfully: $res"
}
